// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal/pkg/gapi/library/library.proto

package library

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GetBooksByUserIDRequest
type GetBooksByUserIDRequest struct {
	UserIds              []int64  `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBooksByUserIDRequest) Reset()         { *m = GetBooksByUserIDRequest{} }
func (m *GetBooksByUserIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetBooksByUserIDRequest) ProtoMessage()    {}
func (*GetBooksByUserIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0c2f8694d64bcd, []int{0}
}
func (m *GetBooksByUserIDRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBooksByUserIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBooksByUserIDRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBooksByUserIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBooksByUserIDRequest.Merge(m, src)
}
func (m *GetBooksByUserIDRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetBooksByUserIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBooksByUserIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBooksByUserIDRequest proto.InternalMessageInfo

func (m *GetBooksByUserIDRequest) GetUserIds() []int64 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

// GetBooksByUserIDResponse
type GetBooksByUserIDResponse struct {
	Users                []*GetBooksByUserIDResponse_Book `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *GetBooksByUserIDResponse) Reset()         { *m = GetBooksByUserIDResponse{} }
func (m *GetBooksByUserIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetBooksByUserIDResponse) ProtoMessage()    {}
func (*GetBooksByUserIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0c2f8694d64bcd, []int{1}
}
func (m *GetBooksByUserIDResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBooksByUserIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBooksByUserIDResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBooksByUserIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBooksByUserIDResponse.Merge(m, src)
}
func (m *GetBooksByUserIDResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetBooksByUserIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBooksByUserIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBooksByUserIDResponse proto.InternalMessageInfo

func (m *GetBooksByUserIDResponse) GetUsers() []*GetBooksByUserIDResponse_Book {
	if m != nil {
		return m.Users
	}
	return nil
}

type GetBooksByUserIDResponse_Book struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBooksByUserIDResponse_Book) Reset()         { *m = GetBooksByUserIDResponse_Book{} }
func (m *GetBooksByUserIDResponse_Book) String() string { return proto.CompactTextString(m) }
func (*GetBooksByUserIDResponse_Book) ProtoMessage()    {}
func (*GetBooksByUserIDResponse_Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d0c2f8694d64bcd, []int{1, 0}
}
func (m *GetBooksByUserIDResponse_Book) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBooksByUserIDResponse_Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBooksByUserIDResponse_Book.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBooksByUserIDResponse_Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBooksByUserIDResponse_Book.Merge(m, src)
}
func (m *GetBooksByUserIDResponse_Book) XXX_Size() int {
	return m.Size()
}
func (m *GetBooksByUserIDResponse_Book) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBooksByUserIDResponse_Book.DiscardUnknown(m)
}

var xxx_messageInfo_GetBooksByUserIDResponse_Book proto.InternalMessageInfo

func (m *GetBooksByUserIDResponse_Book) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetBooksByUserIDResponse_Book) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*GetBooksByUserIDRequest)(nil), "library.GetBooksByUserIDRequest")
	proto.RegisterType((*GetBooksByUserIDResponse)(nil), "library.GetBooksByUserIDResponse")
	proto.RegisterType((*GetBooksByUserIDResponse_Book)(nil), "library.GetBooksByUserIDResponse.Book")
}

func init() {
	proto.RegisterFile("internal/pkg/gapi/library/library.proto", fileDescriptor_8d0c2f8694d64bcd)
}

var fileDescriptor_8d0c2f8694d64bcd = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xcf, 0xcc, 0x2b, 0x49,
	0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0x2f, 0xc8, 0x4e, 0xd7, 0x4f, 0x4f, 0x2c, 0xc8, 0xd4, 0xcf, 0xc9,
	0x4c, 0x2a, 0x4a, 0x2c, 0xaa, 0x84, 0xd1, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0xec, 0x50,
	0xae, 0x94, 0x4c, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa, 0x3e, 0x48, 0x69, 0x62, 0x5e, 0x5e, 0x7e,
	0x49, 0x62, 0x49, 0x66, 0x7e, 0x5e, 0x31, 0x44, 0x99, 0x92, 0x09, 0x97, 0xb8, 0x7b, 0x6a, 0x89,
	0x53, 0x7e, 0x7e, 0x76, 0xb1, 0x53, 0x65, 0x68, 0x71, 0x6a, 0x91, 0xa7, 0x4b, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x90, 0x24, 0x17, 0x47, 0x69, 0x71, 0x6a, 0x51, 0x7c, 0x66, 0x4a, 0xb1,
	0x04, 0xa3, 0x02, 0xb3, 0x06, 0x73, 0x10, 0x3b, 0x88, 0xef, 0x99, 0x52, 0xac, 0xd4, 0xc2, 0xc8,
	0x25, 0x81, 0xa9, 0xad, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0xc8, 0x86, 0x8b, 0x15, 0xa4, 0x0e,
	0xa2, 0x89, 0xdb, 0x48, 0x4d, 0x0f, 0xe6, 0x30, 0x5c, 0x3a, 0xf4, 0x40, 0xa2, 0x41, 0x10, 0x4d,
	0x52, 0x5a, 0x5c, 0x2c, 0x20, 0xae, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x8a, 0x04, 0xa3, 0x02, 0xa3,
	0x06, 0x73, 0x10, 0x53, 0x66, 0x8a, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0x93,
	0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0x6d, 0xd4, 0xc9, 0xc8, 0xc5, 0xee, 0x03, 0x31, 0x5c, 0xa8,
	0x8e, 0x4b, 0x00, 0xdd, 0x7c, 0x21, 0x05, 0x3c, 0x56, 0x83, 0xfd, 0x28, 0xa5, 0x48, 0xd0, 0x71,
	0x4a, 0xaa, 0x4d, 0x97, 0x9f, 0x4c, 0x66, 0x92, 0x57, 0x92, 0xd2, 0x4f, 0xca, 0xcf, 0xcf, 0xd6,
	0x4f, 0x4f, 0x2d, 0xd1, 0x05, 0x31, 0x8a, 0x75, 0x93, 0x2a, 0x75, 0x41, 0x4e, 0xd6, 0xcd, 0x4c,
	0xb1, 0x62, 0xd4, 0x72, 0x92, 0x3c, 0xf1, 0x48, 0x8e, 0xf1, 0xc2, 0x23, 0x39, 0xc6, 0x07, 0x8f,
	0xe4, 0x18, 0x67, 0x3c, 0x96, 0x63, 0x88, 0x82, 0xc5, 0x40, 0x12, 0x1b, 0x38, 0xa8, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x96, 0x2f, 0x80, 0x42, 0xbc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LibraryClient is the client API for Library service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LibraryClient interface {
	// Получить книги, выданные пользователю
	GetBooksByUserID(ctx context.Context, in *GetBooksByUserIDRequest, opts ...grpc.CallOption) (*GetBooksByUserIDResponse, error)
}

type libraryClient struct {
	cc *grpc.ClientConn
}

func NewLibraryClient(cc *grpc.ClientConn) LibraryClient {
	return &libraryClient{cc}
}

func (c *libraryClient) GetBooksByUserID(ctx context.Context, in *GetBooksByUserIDRequest, opts ...grpc.CallOption) (*GetBooksByUserIDResponse, error) {
	out := new(GetBooksByUserIDResponse)
	err := c.cc.Invoke(ctx, "/library.Library/GetBooksByUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LibraryServer is the server API for Library service.
type LibraryServer interface {
	// Получить книги, выданные пользователю
	GetBooksByUserID(context.Context, *GetBooksByUserIDRequest) (*GetBooksByUserIDResponse, error)
}

// UnimplementedLibraryServer can be embedded to have forward compatible implementations.
type UnimplementedLibraryServer struct {
}

func (*UnimplementedLibraryServer) GetBooksByUserID(ctx context.Context, req *GetBooksByUserIDRequest) (*GetBooksByUserIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBooksByUserID not implemented")
}

func RegisterLibraryServer(s *grpc.Server, srv LibraryServer) {
	s.RegisterService(&_Library_serviceDesc, srv)
}

func _Library_GetBooksByUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBooksByUserIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServer).GetBooksByUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.Library/GetBooksByUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServer).GetBooksByUserID(ctx, req.(*GetBooksByUserIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Library_serviceDesc = grpc.ServiceDesc{
	ServiceName: "library.Library",
	HandlerType: (*LibraryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBooksByUserID",
			Handler:    _Library_GetBooksByUserID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/pkg/gapi/library/library.proto",
}

func (m *GetBooksByUserIDRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBooksByUserIDRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBooksByUserIDRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UserIds) > 0 {
		dAtA2 := make([]byte, len(m.UserIds)*10)
		var j1 int
		for _, num1 := range m.UserIds {
			num := uint64(num1)
			for num >= 1<<7 {
				dAtA2[j1] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j1++
			}
			dAtA2[j1] = uint8(num)
			j1++
		}
		i -= j1
		copy(dAtA[i:], dAtA2[:j1])
		i = encodeVarintLibrary(dAtA, i, uint64(j1))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetBooksByUserIDResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBooksByUserIDResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBooksByUserIDResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Users) > 0 {
		for iNdEx := len(m.Users) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Users[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintLibrary(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *GetBooksByUserIDResponse_Book) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBooksByUserIDResponse_Book) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBooksByUserIDResponse_Book) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintLibrary(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintLibrary(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintLibrary(dAtA []byte, offset int, v uint64) int {
	offset -= sovLibrary(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetBooksByUserIDRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.UserIds) > 0 {
		l = 0
		for _, e := range m.UserIds {
			l += sovLibrary(uint64(e))
		}
		n += 1 + sovLibrary(uint64(l)) + l
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetBooksByUserIDResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Users) > 0 {
		for _, e := range m.Users {
			l = e.Size()
			n += 1 + l + sovLibrary(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetBooksByUserIDResponse_Book) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovLibrary(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovLibrary(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovLibrary(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozLibrary(x uint64) (n int) {
	return sovLibrary(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetBooksByUserIDRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLibrary
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBooksByUserIDRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBooksByUserIDRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType == 0 {
				var v int64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLibrary
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.UserIds = append(m.UserIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowLibrary
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthLibrary
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthLibrary
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.UserIds) == 0 {
					m.UserIds = make([]int64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v int64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowLibrary
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= int64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.UserIds = append(m.UserIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field UserIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipLibrary(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLibrary
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLibrary
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBooksByUserIDResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLibrary
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBooksByUserIDResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBooksByUserIDResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Users", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthLibrary
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthLibrary
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Users = append(m.Users, &GetBooksByUserIDResponse_Book{})
			if err := m.Users[len(m.Users)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLibrary(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLibrary
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLibrary
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBooksByUserIDResponse_Book) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowLibrary
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Book: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Book: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowLibrary
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthLibrary
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthLibrary
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipLibrary(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthLibrary
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthLibrary
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipLibrary(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowLibrary
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLibrary
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowLibrary
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthLibrary
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupLibrary
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthLibrary
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthLibrary        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowLibrary          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupLibrary = fmt.Errorf("proto: unexpected end of group")
)
